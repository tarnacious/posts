The default libvirt network creates a virtual bridge call `virbr0` and it has
its own IP address `192.168.122.1/24`. When a virtual machine is configured to
use this bridge, a new interface is created called `vbox1`, `vbox2` etc. The
interface is attached to the virtual bridge and shared with the virtual
machine.

The virtual bridge network supports DHCP so virtual machines can enable DHCP to
obtain an IP address on the bridges network. Some iptables rules are added by
libvirt so requests to address outside the host are correctly routed.

The default libvirt network can be started with the `virsh` command.

    #!/bin/bash
    root@demo ~ # virsh net-start default
    Network default started

The configuration of the network looks like this.

    #!/bin/bash
    root@demo ~ # virsh net-dumpxml default
    &lt;network&gt;
      &lt;name&gt;default&lt;/name&gt;
      &lt;uuid&gt;4690aefc-dfa3-4a0a-bd4c-e4297126a845&lt;/uuid&gt;
      &lt;forward mode='nat'&gt;
        &lt;nat&gt;
          &lt;port start='1024' end='65535'/&gt;
        &lt;/nat&gt;
      &lt;/forward&gt;
      &lt;bridge name='virbr0' stp='on' delay='0'/&gt;
      &lt;mac address='52:54:00:95:92:6b'/&gt;
      &lt;ip address='192.168.122.1' netmask='255.255.255.0'&gt;
        &lt;dhcp&gt;
          &lt;range start='192.168.122.2' end='192.168.122.133'/&gt;
        &lt;/dhcp&gt;
      &lt;/ip&gt;
    &lt;/network&gt;

On the host it has create two new interfaces, the `virbr0` interface and a
`virbr0-nic` interface. The later isn't so important, it's added to the bridge
by default so the `virbr0` has a MAC address.

    #!/bin/bash
    root@demo ~ # ip addr
    ..
    3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000
        link/ether 52:54:00:95:92:6b brd ff:ff:ff:ff:ff:ff
        inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0
           valid_lft forever preferred_lft forever
    4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000
        link/ether 52:54:00:95:92:6b brd ff:ff:ff:ff:ff:ff

When passing one network paramter `--network bridge=virbr0` to `virt-install`
an interface will be included as a PCI device.

    #!/bin/bash
    root@demo ~ # virsh dumpxml guest-1
    &lt;domain type='kvm' id='1'&gt;
    ..
      &lt;devices&gt;
        ..
        &lt;interface type='bridge'&gt;
          &lt;mac address='52:54:00:8c:7f:94'/&gt;
          &lt;source bridge='virbr0'/&gt;
          &lt;target dev='vnet0'/&gt;
          &lt;model type='virtio'/&gt;
          &lt;alias name='net0'/&gt;
          &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/&gt;
        &lt;/interface&gt;
        ..
      &lt;/devices&gt;
    ..
    &lt;/domain&gt;

If the virtual machine disk image doesn't configure a network interface, for
example `/etc/network/interfaces` only contains a loopback configuration like
this:

    #!/bin/bash
    auto lo
    iface lo inet loopback

Then when we access the machine via its console we'll find the inferface called
`ens2` is down. 

    #!/bin/bash
    root@guest-1:~# ip addr
    ..
    2: ens2: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 52:54:00:b3:e8:b7 brd ff:ff:ff:ff:ff:ff
    root@guest-nonw:~# ping tarnbarford.net

And we can't access the Internet.

    #!/bin/bash
    root@guest-1:~# ping tarnbarford.net
    ping: tarnbarford.net: Temporary failure in name resolution

As the network supports DHCP, we just need to run `dhclient` on the interface
to obtain an IP address and bring the interface up.

    #!/bin/bash
    root@guest-1:~# dhclient

Now the interface is up and we have been allocated an IP address, `192.168.122.14`.

    #!/bin/bash
    root@guest-1:~# ip addr
    ..
    2: ens2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
        link/ether 52:54:00:b3:e8:b7 brd ff:ff:ff:ff:ff:ff
        inet 192.168.122.14/24 brd 192.168.122.255 scope global ens2
           valid_lft forever preferred_lft forever
        inet6 fe80::5054:ff:feb3:e8b7/64 scope link
           valid_lft forever preferred_lft forever

Access to the Internet is possible.

    #!/bin/bash
    root@guest-1:~# ping -c 1 tarnbarford.net
    PING tarnbarford.net (178.63.44.71) 56(84) bytes of data.
    64 bytes from mail01.tarnbarford.net (178.63.44.71): icmp_seq=1 ttl=59 time=0.401 ms

To make this more permanent it can be configured in `/etc/network/interfaces`
by appending the following lines.

    #!/bin/bash
    auto ens2
    iface ens2 inet dhcp

Now when after a reboot, the network should be up when it restarts.

The virtual machine can now access the Internet and other virtual machines
running on the host that are using the same virtual bridge.
